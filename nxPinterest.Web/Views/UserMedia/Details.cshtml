@using nxPinterest.Data.Models;
@model nxPinterest.Web.Models.DetailsViewModel
@{
    ViewData["Title"] = "画像選択";
    Layout = "~/Views/Shared/_ImageLayout.cshtml";
//    Layout = "~/Views/Shared/_Layout.cshtml";

	UserMedia userMedia = Model.UserMediaDetail;
}

<script src="~/lib/bootstrap-fileinput/js/fileinput.min.js" asp-append-version="true"></script>
<script src="~/lib/bootstrap-tagsinput/bootstrap-tagsinput.min.js" asp-append-version="true"></script>
<script src="~/lib/bootstrap-fileinput/js/locales/LANG.js" asp-append-version="true"></script>
<div id="image-viewer-modal" tabindex="-1">
	<div class="left-arrow-container arrow-key">
		<a href="@Url.Action("Index", "Home", new { pageIndex = 1})">
			<i class="fas fa-arrow-circle-left fa-3x"></i>
		</a>
	</div>
	<div class="modal-image-viewer" role="document">
		<div class="modal-content">
			<div class="modal-body bg-white">
				<div class="row">
					<div class="col-12  col-md-6 image-detail-col">
						<div class="content h-100">
							<div class="row">
								<div class="image-uploader-wrapper">
									<figure>
										<img src="@userMedia.MediaSmallUrl" alt="@userMedia.MediaFileName" class="main" id="main-image" style="max-height:initial!important"/>
									</figure>
								</div>
							</div>
							<div class="row">
								<div class="slider">
									@*<h6 style="color:#111111;margin-left: 0%;">Other images registered in &quot; @userMedia.MediaTitle &quot;</h6>*@
									<h6 style="color:#111111;margin-left: 0%;">&quot; @userMedia.MediaTitle &quot; で登録されている他の画像 </h6>
									<input type="radio" name="slide_switch" checked="checked" id="@userMedia.MediaId" value="@userMedia.MediaId"/>
									<label for="@userMedia.MediaId" style="background-image:url('@userMedia.MediaThumbnailUrl');">
									        
									</label>
									@for (int i = 0; i < Model.SameTitleUserMediaList.Count(); i++)
									{
										var userMediaThumbnail = Model.SameTitleUserMediaList[i];
									    string activeClass = userMediaThumbnail.MediaFileName.Equals(userMedia.MediaFileName) ? "active" : "";
										string hide_lable = i > 13 ? "hide-lable" : "";

										@if(userMediaThumbnail.MediaId != userMedia.MediaId)
										{
											<input type="radio" name="slide_switch" id="@userMediaThumbnail.MediaId" value="@userMediaThumbnail.MediaId"/>
											<label class="@hide_lable" for="@userMediaThumbnail.MediaId"  style="background-image:url('@userMediaThumbnail.MediaThumbnailUrl');">
												    
											</label>
										}
									}
										
								</div>
								@if (Model.SameTitleUserMediaList.Count() > 14) {
										<input type="button" value="すべて表示" class="btn btn-default btn-save" id="show-all-btn">
									}
							</div>
						</div>
					</div>
					<div class="col-12 col-md-6 image-detail-col">
						<div class="">
							<div class="content">
								<div class="dots-image-container">
									<div class="dropdown">
										<button class="dropdown_btn" id="dropdown_btn">
											<i class="fas fa-ellipsis-h fa-2x" style="color:black"></i>
										</button>
										<div class="dropdown_body">
											<ul class="dropdown_list">
												<li class="dropdown_item"><a href="/UserMedia/Edit?media_id=@userMedia.MediaId" class="dropdown_item-link" id="dropdown_item-edit">編集</a></li>
												<li class="dropdown_item"><a href="javascript:deleteUserMedia(@userMedia.MediaId)" class="dropdown_item-link" id="dropdown_item-del">削除</a></li>
												<li class="dropdown_item"><a href="@userMedia.MediaUrl" class="dropdown_item-link" id="dropdown_item-down">ダウンロード</a></li>
												<li class="dropdown_item"><a href="" class="dropdown_item-link" id="dropdown_item-editg">×一括編集</a></li>
												<li class="dropdown_item"><a href="" class="dropdown_item-link" id="dropdown_item-editg1">×共有</a></li>
												<li class="dropdown_item"><a href="" class="dropdown_item-link" id="dropdown_item-editg2">×アルバムへ追加</a></li>
												<li class="dropdown_item"><a href="" class="dropdown_item-link" id="dropdown_item-editg3">×プロパティ</a></li>
											</ul>
										</div>
									</div>
								</div>
								<h3 style="color:black; text-align: left;">@userMedia.MediaTitle</h3>
								<br />
								<p class="media_desc" style="color:black;margin-left: 5px;">
									@userMedia.MediaDescription
								</p>
								<br />
								@*<p class="text-black tag-text">Tag</p>*@
								<div class="project_tags">
									@foreach (var tag in @Model.OriginalTagsList){
										var url = "/?searchKey=" + tag;
										<a href="@url"><div style="display:inline-block;color:#fff;background-color: #343a40;padding:10px 20px 10px 20px;border-radius:3px;margin-right:7px;margin-bottom:7px;">@tag</div></a>
									}
								</div>

								<input hidden asp-for="@userMedia.MediaId" name="MediaId" />
							</div>
						</div>
					</div>
				</div>
			</div>			
		</div>
	</div>
			
	<div id="blockGallery" class="multiImageSelect-noselect">
        <div class="m-3">
            <div class="content gallery" id="contentGallery">
                <br />
                <h5>似ている画像</h5>
                <br/>
                <div class="thumbnail-container" id="thumbnail-container">
                </div>
            </div>
        </div>
    </div>

    @{
        await Html.RenderPartialAsync("/Views/Home/_HomeImageContainer.cshtml");
    }

</div>

<script>
	function deleteUserMedia(mediaId) {
		$.ajax({
			url: "@Url.Action("DeleteById", "UserMedia", new { media_id = Model.UserMediaDetail.MediaId })",
            method: "Post",
            //data: { media_id : mediaId },
			processData: false,
			contentType: false,
			success: function (sResponse) {
				window.location = '@Url.Action("Index","Home")';
			}
		});
	}
	$('#show-all-btn').on('click', function() {
	    $('.slider label').removeClass('hide-lable');
	    $(this).css('display', 'none');
	});
	$('.slider input').on('click', function() {
	    var media_id = $(this).val();
		$.ajax({
	        url: "@Url.Action("DetailsAjax", "UserMedia")",
	        method: "Post",
	        data: { media_id: media_id},
	        success: function (sResult) {
	            console.log(sResult);
				$('#main-image').attr('src', sResult.userMediaDetail.mediaSmallUrl);
	            $('#dropdown_item-edit').attr('href',"/UserMedia/Edit?media_id=" + sResult.userMediaDetail.mediaId);
	            $('#dropdown_item-del').attr('href',"deleteUserMedia("+sResult.userMediaDetail.mediaId+")");
	            $('#dropdown_item-down').attr('href',sResult.userMediaDetail.mediaUrl);
	            $('.image-detail-col h5').html(sResult.userMediaDetail.mediaTitle);
				$('.image-detail-col .media_desc').html(sResult.userMediaDetail.mediaDescription);
	            $('.project_tags').empty();
				$.each(sResult.project_tags_list, function(index, value) {
                    var url = '/' + "?searchKey=" + value;
	                $('.project_tags').append('<a href='+url+'><div style="display:inline-block;color:#fff;background-color: #343a40;padding:10px 20px 10px 20px;border-radius:3px;margin-right:7px;margin-bottom:7px;">'+value +'</div></a>');
	            });
	        }
		});
	});
	//ボタンがクリックされたらis-openを付加する
	$('#dropdown_btn').on('click', function() {
		this.classList.toggle('is-open');
	});	
</script>

<script>
    window.page = 1;
    window.images= new Array();   
	window.itemWidth = 250;
	$(document).ready(function() {
        $(window).css('min-width',500);
		initCol();
        loadImg();
		//reloadImage();
        $(window).scroll(function() {
            if($(window).scrollTop() + $(window).height() == $(document).height()) {
                loadImg();
            }
        });
        var timer = null;
        $(window).on('resize', function(){
            clearTimeout(timer); 
            timer = setTimeout(function() {
                reloadImage();
            },300);
        });
    });
	function getColNum(itemWidth) {	
        var col_num = Math.floor($(window).width() / itemWidth);	
        return col_num;	
    }	
    function initCol() {	
        var itemWidth = window.itemWidth;	
        $("#thumbnail-container").empty();	
        var col_num = getColNum(itemWidth);	
        var width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;	
        var space = Math.floor((width % itemWidth)/2) + 8;
        for (var i = 1; i <= col_num; i++) {	
            var paddingItem = 4;	
            var padding = paddingItem * 2;	
            var leftSize = ((itemWidth - paddingItem) * (i - 1) + space);	
            $('#thumbnail-container').append('<div id="column-'+i+'" class="image-col" style="position:absolute; width:' + itemWidth +'px; padding:' + padding + 'px;left:'+ leftSize +'px;"></div>');	
        }	
    }	
    function reloadImage() {
        initCol();
        window.images.forEach(function (data) {
            data.forEach(function (value) {
                appendData(value);
            });
        });        
    }

    function loadImg() {
		console.log($('#userMedia_MediaId').val());
		var media_id = $('#userMedia_MediaId').val();
        $.ajax({
            url: "@Url.Action("getSimilarMedia", "UserMedia")",
            method: "Post",
            data: { pageIndex: window.page, media_id: media_id, searchKey: $('#SearchKey').val() },
            success: function (sResult) {
                window.images.push( sResult.relatedUserMediaList );
                $.each(sResult.relatedUserMediaList, function(index, value) {
                    appendData(value);
                });
                window.page = window.page + 1;
            }
        });
    }

    function appendData(value) {
        var newImgEl = document.createElement('img');
        newImgEl.addEventListener('load', function() {
            shortest = findShortestCol();
            shortest.append('<figure id="'+value.mediaId+'"><figcaption><p class="title">'+value.mediaTitle+'</p><p class="description">'+value.mediaDescription+'</p></figcaption></figure>');
            $('#'+value.mediaId).append(newImgEl);
        });
        newImgEl.setAttribute('src', value.mediaThumbnailUrl);
        newImgEl.setAttribute('alt', value.mediaFileName);
		newImgEl.setAttribute('data-media-url', value.mediaUrl);
        newImgEl.setAttribute('data-smallmedia-url', value.mediaSmallUrl);
    }
    function findShortestCol() {
        var count = $("#thumbnail-container").children().length;
        var shortest = $("#column-1");
        for (var i = 1; i <= count; i++) {
            if (Math.floor(shortest.height()) > Math.floor($("#column-"+ i +"").height())) {
                shortest = $("#column-" + i + "");
            }
        }
        return shortest;
    }
</script>

@section Scripts{
    <script>
        function loadImg() {
            var media_id = $('#userMedia_MediaId').val();
            $.ajax({
                url: "@Url.Action("getSimilarMedia", "UserMedia")",
                method: "Post",
                data: { pageIndex: window.page, media_id: media_id, searchKey: $('#SearchKey').val() },
                success: function (sResult) {
                    window.images.push( sResult.relatedUserMediaList );
                    $.each(sResult.relatedUserMediaList, function(index, value) {
                        appendData(value);
                    });
                    window.page = window.page + 1;
                }
            });
        }
    </script>
    }