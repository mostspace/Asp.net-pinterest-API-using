@using nxPinterest.Data.Models;
@model nxPinterest.Web.Models.DetailsViewModel
@{
    ViewData["Title"] = "画像選択";
    Layout = "~/Views/Shared/_ImageLayout.cshtml";

	UserMedia userMedia = Model.UserMediaDetail;
}

<style>

    .btn-create{
        margin-left: 0;
        color: #eef2f7;
        font-size: .9rem;
        display: inline-block;
        font-weight: 400;
        line-height: 1.5;
        /* color: #6c757d; */
        text-align: center;
        vertical-align: middle;
        width: 100px;
        height: 50px;
    }

    .btn-default {
        background-color: #343a40;
        border: none;
        border-radius: 20px;
        position: relative;
        color: #eef2f7;
        }
     
</style>

<script src="~/lib/bootstrap-fileinput/js/fileinput.min.js" asp-append-version="true"></script>
<script src="~/lib/bootstrap-tagsinput/bootstrap-tagsinput.min.js" asp-append-version="true"></script>
<script src="~/lib/bootstrap-fileinput/js/locales/LANG.js" asp-append-version="true"></script>

<div id="image-viewer-modal" tabindex="-1">
	<div class="left-arrow-container arrow-key">
		<a href="@Url.Action("Index", "Home", new { pageIndex = 1})">
			<i class="fas fa-arrow-circle-left fa-3x"></i>
		</a>
	</div>
	<div class="modal-dialog modal-xl modal-image-viewer" role="document">
		<form method="post" id="update-user-media-form" enctype="multipart/form-data" asp-action="DeleteUserMedia" asp-controller="UserMedia">
			<div class="modal-content">
				<div class="modal-body bg-white">
					<div class="row">
						<div class="col">
							<div class="content h-100">
								<div class="row" style = "margin-left: 0px;">
									<div class="image-uploader-wrapper">
										<figure>
											<img src="@userMedia.MediaSmallUrl" alt="@userMedia.MediaFileName" class="main" style="max-height:initial!important"/>
										</figure>
									</div>
								</div>
								@*<div class="row">
									<div class="col">
										<div class="thumbnail-section-wrapper" style="margin-top:0!important">
											@for (int i = 0; i < Model.SameTitleUserMediaList.Count(); i++)
											{
												var userMediaThumbnail = Model.SameTitleUserMediaList[i];
												string activeClass = userMediaThumbnail.MediaFileName.Equals(userMedia.MediaFileName) ? "active" : "";

												<div class="thumbnail-wrapper @activeClass" style="margin-left:4.5px!important">
													<a href="@Url.Action("Edit", "UserMedia", new { media_id = @userMediaThumbnail.MediaId })">
														<img src="@userMediaThumbnail.MediaThumbnailUrl" class="thumbnail" />
													</a>
												</div>
											}
										</div>
									</div>
								</div>*@
							</div>
						</div>
						<div class="col">
							<div class="mb-2">
								<div class="content">
									<input type="text" class="form-control input-control input-title px-0" placeholder="タイトル" asp-for="UserMediaDetail.MediaTitle" name="Title" />
									<textarea rows="3" class="form-control input-control input-explanation px-0" placeholder="説明" asp-for="UserMediaDetail.MediaDescription" name="Description" ></textarea>

									<div class="tag-control-container">
										<p class="text-black tag-text">タグ</p>
										<input class="form-control text-black" data-role="tagsinput" value="@userMedia.OriginalTags" name="OriginalTags" />
									</div>

									<input hidden asp-for="@userMedia.MediaId" name="MediaId" />

									<div class="row">
										<input type="button" value="保存" class="btn btn-default btn-save" style="margin-right: 5px;" id="btn-save">
										<a class="btn btn-lg btn-danger btn-delete" onclick="filedelete('@userMedia.MediaId');" style="border-radius: 1.3rem;font-size: 0.9rem;flex-direction: column;justify-content: center;display: flex;">
											削除
										</a>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>			
			</div>
		</form>
	</div>
</div>

<script>
    function findShortestCol() {
        var count = $("#thumbnail-container").children().length;
        var shortest = $("#column-1");
        for (var i = 1; i <= count; i++) {
            if (Math.floor(shortest.height()) > Math.floor($("#column-"+ i +"").height())) {
                shortest = $("#column-" + i + "");
            }
        }
        return shortest;
    }
		//(function () {
			// function configureFileUploadControl() {
			//	var imageUrl = '@userMedia.MediaUrl';

			//	$(this).fileinput({
			//		allowedFileTypes: ['image'],
			////		deleteUrl: '@@Url.Action("DeleteUserMedia", "UserMedia", new { media_id = Model.UserMediaDetailCosmos.MediaId })',
			//		deleteUrl: '@Url.Action("DeleteUserMedia", "UserMedia", new { media_id = Model.UserMediaDetail.MediaId })',
			//		initialPreviewAsData: true,
			//		overwriteInitial: true,
			//		browseOnZoneClick: true,
			//		initialPreview: [
			//			imageUrl
			//		],
			//		showUpload: false,
			//		showBrowse: false,
			//		showCaption: false,
			//		showRemove: false
			//	}).on('filedeleted', function () {
			//		window.location = '@Url.Action("Index","Home")';
			//	});
			//}

		function filedelete(media_id) {
			$.ajax({
				url: '@Url.Action("DeleteUserMedia", "UserMedia", new { media_id = Model.UserMediaDetail.MediaId })',
                method: "Post",
                data: { media_id },
				processData: false,
				contentType: false,
				success: function (sResponse) {
					window.location = '@Url.Action("Index","Home")';
				}
			});
		}

		$('input.btn-save').on('click', function () {
			var formData = new FormData(document.querySelector('#update-user-media-form'))

			$.ajax({
				url: '@Url.Action("UploadMediaFile", "UserMedia")',
				method: 'POST',
				data: formData,
				processData: false,
				contentType: false,
				success: function (sResponse) {
					window.location = '@Url.Action("Index","Home")';
				}
			});
		});

	@* configureFileUploadControl(); *@
	//}());
</script>
