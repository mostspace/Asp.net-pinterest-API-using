<div class="modal fade text-black" id="createUserMediaFolderModal" tabindex="-1" role="dialog" aria-labelledby="createUserMediaFolderModalTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header border-0">
                <h5 class="modal-title w-100 text-center ">アルバムに追加</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-hidden="true"></button>
            </div>
            <div class="modal-body" id="mediaFolderContent">
            </div>
        </div>
    </div>
</div>
<div class="modal fade text-black" id="shareUserMediaFileModal" tabindex="-1" role="dialog" aria-labelledby="shareUserMediaFileModalTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header border-0">
                <h5 class="modal-title w-100 text-center ">写真を外部と共有する</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-hidden="true"></button>

            </div>
            <div class="modal-body">
                <div class="row g-3 align-items-center">
                    <div class="col-9 mx-auto">
                        <div class="input-group input-medium date date-picker" data-provide="datepicker">
                            <span class="input-group-btn" style="font-size: 0; white-space: nowrap;vertical-align: middle;">
                                <button class="btn default" type="button" style="color: #666; background-color: #e1e5ec; border-color: #e1e5ec;border-radius: 0 ">
                                    <i class="fa fa-calendar"></i>
                                </button>
                            </span>
                            <input type="text" class="form-control z-index-99" id="expireDate" readonly="" style="border-color: #e1e5ec;border-radius: 0 " placeholder="共有期限">
                        </div>
                    </div>
                </div>
                <div class="row g-3 mt-2">
                    <div class="col-9 mx-auto">
                        <textarea class="form-control" rows="5" id="comment" name="comment" placeholder="コメント"></textarea>
                    </div>
                </div>
                <div class="d-flex justify-content-center mt-3">
                    <div class="btn-group mx-4">
                        <button type="button" id="sharedAlbumMedia" class="btn btn-outline-secondary btn-md text-center">
                            共有する
                        </button>
                    </div>

                </div>

                <div id="footerUserMediaLink">
                    <div class="clearfix"></div>
                    <hr class="mb-5">
                    <div class="input-group">
                        <input type="text" class="form-control" id="shareUserMediaFileLink">
                        <button type="button" id="copyLinkMedia" class="btn btn-outline-secondary btn-md text-center" data-toggle="tooltip" data-placement="top" title="コピーする">
                            <i class="fa fa-copy" aria-hidden="true"></i>
                        </button>
                    </div>
                    <div class="d-flex justify-content-center mt-3">
                        <div id="tooltipCopy" data-toggle="tooltip" data-placement="top" title="リンクが共有されました。"></div>
                    </div>
                </div>
            </div>
            <div class="modal-footer border-0">
            </div>
        </div>
    </div>
</div>
<div class="modal fade text-black" id="deleteConfirmModal" tabindex="-1" role="dialog" aria-labelledby="deleteConfirmModalTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-body">
                <h5 class="text-center" style="font-weight: normal;">削除してよろしいですか</h5>
            </div>
            <div class="modal-footer pt-0">
                <button type="button" class="btn" data-bs-dismiss="modal">いいえ</button>
                <button type="button" class="btn btn-danger" onclick="deleteUserMediaFile();">はい</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade text-black" id="showPreviewImageModal" tabindex="-1" role="dialog" aria-labelledby="showPreviewImageModalTitle" aria-hidden="true">
    <span class="carousel-control-prev" id="previousPreviewImage" onclick="showOtherPreviewImage('previous')" role="button" data-slide="prev">
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="sr-only">Previous</span>
    </span>
    <span class="carousel-control-next" id="nextPreviewImage" onclick="showOtherPreviewImage('next')" role="button" data-slide="next">
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
        <span class="sr-only">Next</span>
    </span>
    <div class="modal-dialog modal-dialog-centered modal-xl" role="document">
        <div class="modal-content">
            <div class="modal-body" id="previewImageArea">
                <img id="previewImage" style="width:100%; height:100%">
            </div>
        </div>
    </div>
</div>

<iframe id="iframeDownload1" style="display: none"></iframe>
<iframe id="iframeDownload2" style="display: none"></iframe>
<iframe id="iframeDownload3" style="display: none"></iframe>

<script>
	window.page = 1;
    window.pageAlbum = 1;
    window.isFullImage = true;
    window.fullAlbumName = "";
    window.isLoadAlbum = false;
    window.images = new Array();
    window.imagesAlbum = new Array();
    window.itemWidth = 250;
    window.itemHeight = 150;
    window.returnUrl = "";
    $(document).ready(function() {
        $(window).css('min-width', 500);
        initCol();
        if (window.isFullImage) {
            loadAlbum();
        } else {
            loadImgByName(window.fullAlbumName);
        } 
        var timer = null;
        $(window).on('resize', function(){
            clearTimeout(timer);
            timer = setTimeout(function() {
                if (window.isFullImage) {
                    loadAlbum();
                } 
            },300);
        });
        document.getElementById("changeZoomRange").value = localStorage.getItem("zoomSize");
        //changeZoom();
    });
    function getColNum(itemWidth) {
        var col_num = Math.floor($(window).width() / itemWidth);
        return col_num;
    }
    function initCol() {
        var itemWidth = window.itemWidth;
        $("#thumbnail-container").empty();
        var col_num = getColNum(itemWidth);
        var width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
        
        if (width > 550) {
            var itemWidth = window.itemWidth;
            var col_num = getColNum(itemWidth);
            var space = Math.floor((width % itemWidth) / 2) + 8;
            for (var i = 1; i <= col_num; i++) {
                var paddingItem = 4;
                var padding = paddingItem * 2;
                var leftSize = ((itemWidth - paddingItem) * (i - 1) + space);
                $('#thumbnail-container').append('<div id="column-' + i + '" class="image-col" style="position:absolute; width:' + itemWidth + 'px; padding:' + padding + 'px;left:' + leftSize + 'px;"></div>');
            }
        } else {
            var col_num = 6 - (window.itemWidth - 100) / 50;
            var space = (col_num == 6 || col_num == 5) ? 8 : 10;
            var itemWidth = (width - (space - 8) * (col_num - 1) - (space - 4) * 2) / col_num;
            window.itemHeight = itemWidth * 0.6;
            for (var i = 1; i <= col_num; i++) {
                var paddingItem = 4;
                var padding = paddingItem * 2;
                var leftSize = (itemWidth * (i - 1) + (space - 4) + (space - 8) * (i - 1));
                $('#thumbnail-container').append('<div id="column-' + i + '" class="image-col" style="position:absolute; width:' + itemWidth + 'px; padding:' + padding + 'px;left:' + leftSize + 'px;"></div>');
            }
        }
    }
    function reloadImage() {
        initCol();
        window.images.forEach(function (data) {
            appendData(data);
        });
    }

    function appendData(value) {
        var newImgEl = document.createElement('img');
        var newTitleEl = document.createElement('h6');
        newTitleEl.innerHTML = value.albumName + '(' + value.imageCount +')';
        newTitleEl.classList.add('album-title');
        newTitleEl.classList.add('text-truncate');
        function handleLoad(){
            shortest = findShortestCol();
            shortest.append('<div id="' + value.albumId + '"></div>');
            var newDivEl = $('div[id="' + value.albumId + '"]');
            newDivEl.append('<figure id="'+value.albumId+'" data-url="'+ value.albumUrl + '" style="height:'+ window.itemHeight +'px;"><figcaption><p class="title">'+value.albumName+'</p></figcaption></figure>');
            var figureItemEle = $('figure[id="' + value.albumId + '"]');
                        
            figureItemEle.append(newImgEl);
            newDivEl.append(newTitleEl);  
        }
        newImgEl.addEventListener('load', handleLoad);
        newImgEl.setAttribute('src', value.albumThumbnailUrl);
        newImgEl.setAttribute('alt', value.albumName);

        newImgEl.addEventListener('error', function (){
            newImgEl.removeEventListener('load', handleLoad);
            handleLoad();
            newImgEl.setAttribute('src', '@nxPinterest.Web.Controllers.HomeController.NoIMGURL');
        });
    }

    function findShortestCol() {
        var count = $("#thumbnail-container").children().length;
        var shortest = $("#column-1");
        for (var i = 1; i <= count; i++) {
            if (Math.floor(shortest.height()) > Math.floor($("#column-"+ i +"").height())) {
                shortest = $("#column-" + i + "");
            }
        }
        return shortest;
    }
    function onViewUserMediaDetails(media_id) {
        $("#imagePreview").html("");
        window.isFullImage = true;
        OnGetUserMediaDetails(media_id).then(function (html) {
            $("#contentGallery").hide();
            $("#sectionPagination").hide();
            $(".add-image-container").hide();

            $("#imagePreview").append(html);
            $("#imagePreview").show();
        });
    }

    async function OnGetUserMediaDetails(media_id) {
        var promise = await new Promise(function (resolve, reject) {
            $.ajax({
                url: "@Url.Action("Details", "UserMedia")",
                method: "Post",
                data: { media_id },
                success: function (sResult) {
                    resolve(sResult);
                }
            });
        });

        return promise;
    }

    function ShowHomeImageContainer() {
        $("#imagePreview").hide();
        $("#imagePreview").html("");
        $(".add-image-container").show();
        $("#sectionPagination").show();
        $("#contentGallery").show();
    }

    function getCurrentZoomRange() {
        var changeZoomRange = document.getElementById("changeZoomRange");
        return Number(changeZoomRange.value);
    }

    function changeZoom() {
        var zoomSize = getCurrentZoomRange();
        var rangeWidth = 50;
        var rangeHeight = 30;
        window.itemWidth = 100 + rangeWidth * zoomSize;
        window.itemHeight = 60 + rangeHeight * zoomSize;

        var timer = null;
        clearTimeout(timer);
        timer = setTimeout(function () {
            if (window.isFullImage) {
                reloadImage();
            } 
        }, 300);
        localStorage.setItem('zoomSize', zoomSize);
    }

    function changeZoomOut() {
        var zoomSize = getCurrentZoomRange();
        if (zoomSize <= 0) {
            return;
        }
        document.getElementById("changeZoomRange").value = zoomSize - 1;
        changeZoom();
    }

    function changeZoomIn() {
        var zoomSize = getCurrentZoomRange();
        if (zoomSize >= 6) {
            return;
        }
        document.getElementById("changeZoomRange").value = zoomSize + 1;
        changeZoom();
    }

    async function loadAlbum() {
            showLoader();
            initCol();
            window.isFullImage = true;
            await new Promise(function (resolve, reject) { 
                $.ajax({
                    url: "@Url.Action("getAlbum", "Home")",
                    method: "Post",
                    data: { searchKey: $('#SearchKey').val()},
                    success: function (sResult) {
                        window.images = [];
                        window.images = sResult.albumList;
                        window.images = [...new Set(window.images)];
                        window.images = window.images.filter((image, index, self) =>
                            index === self.findIndex((t) => (
                                t.albumName === image.albumName
                            ))
                        );
                        $.each(window.images, function (index, value) {
                            appendData(value);
                        });
                    },
                    error: function () {
                        hideLoader();
                    }
                });
            });
            hideLoader();
        }
</script>
