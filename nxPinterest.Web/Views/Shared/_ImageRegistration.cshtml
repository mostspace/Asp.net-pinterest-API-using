@model nxPinterest.Services.Models.Request.ImageRegistrationRequests

<script src="~/lib/bootstrap-tagsinput/bootstrap-tagsinput.min.js" asp-append-version="true"></script>

<div class="modal fade" id="image-registration-modal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-centered modal-registration" role="document">
        <div class="modal-content">
            <div class="modal-body">
                <div class="row h-100">
                    <div class="col">
                        <div class="container h-100 p-1">
                            <div class="content">
                                <div class="row h-100">
                                    <div class="row h-100">
                                        <div class="col-md-12">
                                            <!-- Dropzone Start -->
                                            <form asp-action="UploadMediaFile" asp-controller="ImageManagement" method="post" enctype="multipart/form-data" class="form-horizontal dropzone h-100" name="dropzoneForm" id="dropzoneForm">
                                                <div class="form-group form-actions">
                                                    <div class="fallback"></div>
                                                    <input type="file" name="Images" id="upfiles" style="display: none;" />
                                                </div>
                                            </form>
                                            <!-- Dropzone End -->
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="content">
                                <input type="text" class="form-control input-control input-title px-0" placeholder="タイトル" asp-for="Title" />
                                <div class="form-text text-danger mt-4">
                                    @Html.ValidationMessageFor(c => c.Title)
                                </div>
                                <input type="text" class="form-control input-control input-title px-0" placeholder="説明" asp-for="Description" />
                                <div class="form-text text-danger mt-4">
                                    @Html.ValidationMessageFor(c => c.Description)
                                </div>

                                <div class="tag-control-container">
                                    <p class="tag-text" style="color: #adb5bd; ">Project Tag</p>
                                    <input class="form-control text-black" data-role="tagsinput" asp-for="ProjectTags" />
                                </div>

                                <input hidden asp-for="PhotoTags" />
                                <input hidden asp-for="UserCreated" />
                                <input hidden asp-for="DateTimeUploaded" />
                                <div class="text-center">
                                    <input type="button" value="写真を投稿" class="btn btn-default btn-save" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    /* DropZone */
    function myParamName() {
        return "upfiles";
    }
    Dropzone.options.dropzoneForm = {
        paramName: myParamName,
        autoProcessQueue: false,
        uploadMultiple: true,
        init: function () {
            var myDropzone = this;
            $("#upload_submit").click(function (e) {
                this.disabled = true;
                allFiles = myDropzone.getAcceptedFiles();

                if (allFiles.length > 0) {
                    const p = document.getElementById("blinking");
                    p.style.display = "block";

                    inputFiles = document.getElementById("upfiles");
                    const dt = new DataTransfer();

                    for (i = 0; i < allFiles.length; i++) {
                        dt.items.add(allFiles[i]);
                    }
                    inputFiles.files = dt.files;
                }
                e.preventDefault();
                e.stopPropagation();
                myDropzone.processQueue();
                document.dropzoneForm.submit();
            });

            // on add file
            this.on("addedfile", function (file) {
            });

            // on remove file
            this.on("removefile", function (file) {
            });
        },
        accept: function (file, done) {
            done();
        }
    };
</script>
